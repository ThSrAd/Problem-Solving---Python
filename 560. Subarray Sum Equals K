Given an array of integers nums and an integer k, return the total number of continuous subarrays whose sum equals to k.

Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
Example 2:

Input: nums = [1,2,3], k = 3
Output: 2
 

Solution:
class Solution(object):
    def subarraySum(self, nums, k):
        if len(nums)==0:
            return 0
        
        
        hmap =dict()
        hmap[0] = 1
        #print(hmap)
        csum =0
        count = 0
        
        for i in range(0,len(nums)):
            csum += nums[i]
            if csum - k in hmap.keys():
                count = hmap.get(csum-k,0)+1
            else:
                hmap[csum] = hmap.get(csum,0) +1
        return count
